{"ast":null,"code":"var _jsxFileName = \"/home/firdavs/Desktop/CSLearning/YouTube/my-app/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport Modal from './Modal.js';\nimport Backdrop from './Backdrop.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n\n  function closeModelHandler() {\n    setModalIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), modalIsOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n      onCancel: closeModelHandler,\n      onConfirm: closeModelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }, this) : null, modalIsOpen ? /*#__PURE__*/_jsxDEV(Backdrop, {\n      onTouch: closeModelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/firdavs/Desktop/CSLearning/YouTube/my-app/src/components/Todo.js"],"names":["Modal","Backdrop","useState","Todo","props","modalIsOpen","setModalIsOpen","deleteHandler","closeModelHandler","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,SAASC,IAAT,CAAeC,KAAf,EAAqB;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;;AAGA,WAAUK,aAAV,GAAyB;AACrBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEH;;AACD,WAASE,iBAAT,GAA4B;AACxBF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAED,sBACI;AAAA,4BACI;AAAA,gBAAKF,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACG;AAAQ,QAAA,SAAS,EAAG,KAApB;AAA0B,QAAA,OAAO,EAAIF,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKKF,WAAW,gBAAG,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAIG,iBAAnB;AAAsC,MAAA,SAAS,EAAEA;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAH,GAA4E,IAL5F,EAMKH,WAAW,gBAAG,QAAC,QAAD;AAAU,MAAA,OAAO,EAAIG;AAArB;AAAA;AAAA;AAAA;AAAA,YAAH,GAA+C,IAN/D;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAxBQL,I;;KAAAA,I;AA0BT,eAAeA,IAAf","sourcesContent":["import Modal from './Modal.js';\nimport Backdrop from './Backdrop.js';\nimport { useState } from 'react';\nfunction Todo (props){\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    \n\n    function  deleteHandler(){\n        setModalIsOpen(true);\n        \n    }\n    function closeModelHandler(){\n        setModalIsOpen(false);\n    }\n\n    return(\n        <div >\n            <h1>{props.text}</h1> \n            <div>\n               <button className = \"btn\" onClick = {deleteHandler}>Delete</button>\n            </div>\n            {modalIsOpen ? <Modal onCancel = {closeModelHandler} onConfirm={closeModelHandler} /> : null }\n            {modalIsOpen ? <Backdrop onTouch = {closeModelHandler}/> : null }\n            \n        </div>\n  \n    )\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}